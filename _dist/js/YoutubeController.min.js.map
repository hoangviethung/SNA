{"version":3,"sources":["YoutubeController.js"],"names":["getYoutubeID","url","undefined","match","regExp","length","tag","document","createElement","src","player","onYouTubeIframeAPIReady","querySelectorAll","youtubeItems","i","Array","idRandom","toString","substring","Date","setAttribute","elementId","getAttribute","YT","Player","height","width","videoId","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","playerVars","autoplay","rel","showinfo","controls","event","parentNode","insertBefore","firstScriptTag","done","PlayerState","setTimeout","data","stopVideo","PLAYING"],"mappings":"aACA,IAAMA,aAAe,SAACC,GADtB,QAAAC,IAAAD,EAQY,OAAO,EAPbD,IACKG,EAAKD,EAAZC,MADiB,+EAETC,SAAAA,GAAS,IAAAD,EAAA,GAAAE,SACEF,EAAH,IAWpBG,IAAAC,SAAAC,cAAA,UAGAF,IAAIG,IAAM,qCAFV,IAQIC,OARAJ,eAAeE,SAAAA,qBAAnB,UAAA,GAUA,SAASG,0BACL,IADJ,IAASA,EAAAA,MAAAA,KAA0BJ,SAAAK,iBAAA,iBACzBC,EAAAA,EAAYC,EAAGC,EAAWR,OAASK,IAAAA,CACpC,IAAKI,GAAUH,IAAAA,MAAaR,UAAaY,SAAA,IAAAC,UAAA,GAEpCF,EAAYF,GAAIK,aAAJ,KAAsBF,GACxCJ,IAAAA,EAAgBO,EAAmBJ,GAAAA,aAAnC,MACMK,EAAYR,aAAgBS,EAAaR,GAA7BQ,aAAlB,aAIAZ,OAAaa,IAAGC,GAAAA,OAAOH,EAAW,CACxBI,OADwB,OAEzBC,MAFyB,OAG9BC,QAASA,EACHC,OAAE,CACJC,QAAWC,cACXC,cAAiBC,qBAErBC,WAAY,CACRC,SADQ,EAAAC,IAAA,EAGRC,SAHQ,EAIRC,SAAY,MAQ5B,SAASP,cAAcQ,IAtCvBhC,eAAUiC,WAAAC,aAAAlC,IAAAmC,gBA6CV,IAAIC,MAAO,EAGP,SAAIJ,oBAAiBK,GACjBC,EAAUC,MAACC,GAADH,YAAVI,SAAAL,OACIE,WAAJE,UAAA,KACHJ,MAAA,GAIDhC,SAAOoC,YACVpC,OAAAoC","file":"YoutubeController.min.js","sourcesContent":["// Get youtube ID from URL\r\nconst getYoutubeID = (url) => {\r\n    if (url !== undefined) {\r\n        var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\r\n        var match = url.match(regExp);\r\n        if (match && match[7].length == 11) {\r\n            return match[7];\r\n        } else {\r\n            return false;\r\n        }\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n// This code loads the IFrame Player API code asynchronously.\r\nvar tag = document.createElement('script');\r\n\r\ntag.src = \"https://www.youtube.com/iframe_api\";\r\nvar firstScriptTag = document.getElementsByTagName('script')[3];\r\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n// This function creates an <iframe> (and YouTube player)\r\n//    after the API code downloads.\r\nvar player;\r\n\r\nfunction onYouTubeIframeAPIReady() {\r\n    const youtubeItems = Array.from(document.querySelectorAll(\".youtube-api\"));\r\n    for (let i = 0; i < youtubeItems.length; i++) {\r\n\r\n        const idRandom = (new Date().getTime()).toString(32).substring(4);\r\n        youtubeItems[i].setAttribute('id', idRandom)\r\n        const elementId = youtubeItems[i].getAttribute('id');\r\n        const videoId = getYoutubeID(youtubeItems[i].getAttribute('data-url'))\r\n        ';'\r\n\r\n        player = new YT.Player(elementId, {\r\n            height: '100%',\r\n            width: '100%',\r\n            videoId: videoId,\r\n            events: {\r\n                'onReady': onPlayerReady,\r\n                'onStateChange': onPlayerStateChange\r\n            },\r\n            playerVars: {\r\n                'autoplay': 0,\r\n                'rel': 0,\r\n                'showinfo': 0,\r\n                'controls': 0\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\n// OFF AUTOUPLAY\r\n// 4. The API will call this function when the video player is ready.\r\nfunction onPlayerReady(event) {\r\n    // event.target.playVideo();\r\n}\r\n\r\n// 5. The API calls this function when the player's state changes.\r\n//    The function indicates that when playing a video (state=1),\r\n//    the player should play for six seconds and then stop.\r\nvar done = false;\r\n\r\nfunction onPlayerStateChange(event) {\r\n    if (event.data == YT.PlayerState.PLAYING && !done) {\r\n        setTimeout(stopVideo, 6000);\r\n        done = true;\r\n    }\r\n}\r\n\r\nfunction stopVideo() {\r\n    player.stopVideo();\r\n}"]}